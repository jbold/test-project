const p=new URL("sveltekit-internal://");function b(e,r){if(r[0]==="/"&&r[1]==="/")return r;let n=new URL(e,p);return n=new URL(r,n),n.protocol===p.protocol?n.pathname+n.search+n.hash:n.href}function $(e,r){return e==="/"||r==="ignore"?e:r==="never"?e.endsWith("/")?e.slice(0,-1):e:r==="always"&&!e.endsWith("/")?e+"/":e}function P(e){return e.split("%25").map(decodeURI).join("%25")}function S(e){for(const r in e)e[r]=decodeURIComponent(e[r]);return e}function x(e,r,n,o=!1){const t=new URL(e);Object.defineProperty(t,"searchParams",{value:new Proxy(t.searchParams,{get(s,a){if(a==="get"||a==="getAll"||a==="has")return d=>(n(d),s[a](d));r();const i=Reflect.get(s,a);return typeof i=="function"?i.bind(s):i}}),enumerable:!0,configurable:!0});const u=["href","pathname","search","toString","toJSON"];o&&u.push("hash");for(const s of u)Object.defineProperty(t,s,{get(){return r(),e[s]},enumerable:!0,configurable:!0});return t[Symbol.for("nodejs.util.inspect.custom")]=(s,a,i)=>i(e,a),t.searchParams[Symbol.for("nodejs.util.inspect.custom")]=(s,a,i)=>i(e.searchParams,a),o||w(t),t}function w(e){h(e),Object.defineProperty(e,"hash",{get(){throw new Error("Cannot access event.url.hash. Consider using `page.url.hash` inside a component instead")}})}function y(e){h(e);for(const r of["search","searchParams"])Object.defineProperty(e,r,{get(){throw new Error(`Cannot access url.${r} on a page with prerendering enabled`)}})}function h(e){e[Symbol.for("nodejs.util.inspect.custom")]=(r,n,o)=>o(new URL(e),n)}function c(e){function r(n,o){if(n)for(const t in n){if(t[0]==="_"||e.has(t))continue;const u=[...e.values()],s=m(t,o?.slice(o.lastIndexOf(".")))??`valid exports are ${u.join(", ")}, or anything with a '_' prefix`;throw new Error(`Invalid export '${t}'${o?` in ${o}`:""} (${s})`)}}return r}function m(e,r=".js"){const n=[];if(l.has(e)&&n.push(`+layout${r}`),_.has(e)&&n.push(`+page${r}`),f.has(e)&&n.push(`+layout.server${r}`),v.has(e)&&n.push(`+page.server${r}`),g.has(e)&&n.push(`+server${r}`),n.length>0)return`'${e}' is a valid export in ${n.slice(0,-1).join(", ")}${n.length>1?" or ":""}${n.at(-1)}`}const l=new Set(["load","prerender","csr","ssr","trailingSlash","config"]),_=new Set([...l,"entries"]),f=new Set([...l]),v=new Set([...f,"actions","entries"]),g=new Set(["GET","POST","PATCH","PUT","DELETE","OPTIONS","HEAD","fallback","prerender","trailingSlash","config","entries"]),j=c(l),O=c(_),E=c(f),R=c(v),U=c(g);export{S as a,j as b,R as c,y as d,O as e,P as f,U as g,x as m,$ as n,b as r,E as v};
